{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABETICALLY","SORT_FIELD_BY_LENGTH","sortGoods","goods","sortField","makeReverse","preparedGoods","sort","good1","good2","localeCompare","length","reverse","App","useState","visibleGoods","setVisibleGoods","setSortField","isReversed","setIsReversed","isReset","setIsReset","className","type","cn","onClick","JSON","stringify","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAA4B,sBAC5BC,EAAuB,iBAE7B,SAASC,EAAUC,EAAOC,GAAiC,IAAtBC,EAAqB,wDAClDC,EAAa,YAAOH,GAiB1B,OAfIC,GACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKJ,EACH,OAAOQ,EAAME,cAAcD,GAE7B,KAAKR,EACH,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKRN,EAAcC,EAAcM,UAAYN,EAG1C,IAAMO,EAAM,WACjB,MAAwCC,mBAASf,GAAjD,mBAAOgB,EAAP,KAAqBC,EAArB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOV,EAAP,KAAkBa,EAAlB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KAqCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CACE,WAAYpB,IAAcJ,IAG9ByB,QAxCwB,WAE5BT,EADEE,EACchB,EAAUa,EAAcf,GAA2B,GAEnDE,EAAUa,EAAcf,IAG1CiB,EAAajB,GACbqB,GAAW,IAuBP,iCAcA,wBACEE,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,WAAYpB,IAAcH,IAG9BwB,QA3CkB,WAEtBT,EADEE,EACchB,EAAUa,EAAcd,GAAsB,GAE9CC,EAAUa,EAAcd,IAG1CgB,EAAahB,GACboB,GAAW,IA0BP,4BAcA,wBACEE,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CACE,YAAaN,IAAeE,IAGhCK,QA9Ca,WACnBT,EAAgBd,EAAUa,EAAc,IAAI,IAC5CI,GAAeD,GACfG,GAAW,IAkCP,qBAcCD,GACEM,KAAKC,UAAUZ,KAAkBW,KAAKC,UAAU5B,IAEjD,wBACEwB,KAAK,SACLD,UAAU,4BACVG,QAtFS,WACjBT,EAAgBjB,GAChBkB,EAAa,IACbI,GAAW,GACXF,GAAeD,IA+ET,sBAUJ,6BACGH,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC5IlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0091b25a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABETICALLY = 'Sort alphabetically';\nconst SORT_FIELD_BY_LENGTH = 'Sort by length';\n\nfunction sortGoods(goods, sortField, makeReverse = false) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return makeReverse ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [visibleGoods, setVisibleGoods] = useState(goodsFromServer);\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const [isReset, setIsReset] = useState(false);\n\n  const resetClick = () => {\n    setVisibleGoods(goodsFromServer);\n    setSortField('');\n    setIsReset(false);\n    setIsReversed(!isReversed);\n  };\n\n  const sortAlphabeticallyClick = () => {\n    if (isReversed) {\n      setVisibleGoods(sortGoods(visibleGoods, SORT_FIELD_ALPHABETICALLY, true));\n    } else {\n      setVisibleGoods(sortGoods(visibleGoods, SORT_FIELD_ALPHABETICALLY));\n    }\n\n    setSortField(SORT_FIELD_ALPHABETICALLY);\n    setIsReset(true);\n  };\n\n  const sortByLengthClick = () => {\n    if (isReversed) {\n      setVisibleGoods(sortGoods(visibleGoods, SORT_FIELD_BY_LENGTH, true));\n    } else {\n      setVisibleGoods(sortGoods(visibleGoods, SORT_FIELD_BY_LENGTH));\n    }\n\n    setSortField(SORT_FIELD_BY_LENGTH);\n    setIsReset(true);\n  };\n\n  const reverseClick = () => {\n    setVisibleGoods(sortGoods(visibleGoods, '', true));\n    setIsReversed(!isReversed);\n    setIsReset(true);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortField !== SORT_FIELD_ALPHABETICALLY,\n            },\n          )}\n          onClick={sortAlphabeticallyClick}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            {\n              'is-light': sortField !== SORT_FIELD_BY_LENGTH,\n            },\n          )}\n          onClick={sortByLengthClick}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed || !isReset,\n            },\n          )}\n          onClick={reverseClick}\n        >\n          Reverse\n        </button>\n\n        {isReset\n        && JSON.stringify(visibleGoods) !== JSON.stringify(goodsFromServer)\n        && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetClick}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}